#!/bin/bash

. /pyenv/conda/etc/profile.d/conda.sh
conda activate /pyenv/app

export EGL_VISIBLE_DEVICES=${CUDA_VISIBLE_DEVICES%%,*}    # example: 2,3,4 => 2

icewm & wm=$!

python -c 'import torch;print("torch.__version__=", torch.__version__, "\ntorch.cuda.device_count()=", torch.cuda.device_count(), "\ntorch.cuda.is_available()=", torch.cuda.is_available(), "\ntorch.version.cuda=", torch.version.cuda, "\ntorch.backends.cudnn.version()=", torch.backends.cudnn.version());'

export CUDA_LAUNCH_BLOCKING=1

if true; then
    cd cosypose
    # build but not setting up because apptainer's sif file might be not writable
    # then setting PATH below
    [ -d build ] || python setup.py build
    (cd deps/bullet3; [ -d build ] || python setup.py build)
    (cd deps/job-runner; [ -d build ] || python setup.py build)
    pylib=$(cd build; ls | grep ^lib | head -1)
    #export PYTHONPATH=$(pwd)/build/${pylib}:$(pwd)/deps/bullet3/build/${pylib}:$(pwd)/deps/job-runner/build/${pylib}:${PYTHONPATH}
    #export PYTHON_PATH=${PYTHONPATH}
    #export LD_LIBRARY_PATH=$(pwd)/build/${pylib}:$(pwd)/deps/bullet3/build/${pylib}:$(pwd)/deps/job-runner/build/${pylib}:${LD_LIBRARY_PATH}
    echo PYTHONPATH=${PYTHONPATH}
    cd ..
else
    (cd cosypose; [ -d build ] || python setup.py install)
    (cd cosypose/deps/bullet3; [ -d build ] || python setup.py install)
    (cd cosypose/deps/job-runner; [ -d build ] || python setup.py install)
fi

source ros_cosypose/devel/setup.bash

export ROS_PACKAGE_PATH=${ROS_PACKAGE_PATH}:$(pwd)/ros_cosypose
export PATH=$(pwd)/ros_cosypose/scripts:${PATH}

roslaunch ros_cosypose/launch/singleview_loop.launch debug:=true bringup_camera:=true || true

kill $wm
