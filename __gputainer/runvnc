#!/bin/bash

# this script should be symlinked from application directory
[ -d ../__gputainer ] || cd ${0%/*}

# !!!!! properly configure VirtualGL !!!!!
# DOC: # https://rawcdn.githack.com/VirtualGL/virtualgl/3.0/doc/index.html#hd006

if [ -z "${CUDA_VISIBLE_DEVICES}" ]; then
    # SLURM is supposed to set this
    # so we are started by hand
    echo "===============================" 1>&2
    echo "CUDA_VISIBLE_DEVICES IS NOT SET" 1>&2
    echo "finding one for testing"         1>&2
    echo "===============================" 1>&2
    for card in /dev/dri/card*; do
        if /opt/VirtualGL/bin/eglinfo ${card} | grep vendor.*NVIDIA; then
            export CUDA_VISIBLE_DEVICES=$(echo ${card} | sed 's/.*\(.\)$/\1/')
            dri=${card}
            break
        fi
    done
fi
if [ -z "${dri}" ]; then
    first_cuda=${CUDA_VISIBLE_DEVICES%%,*}   # 2,3,4,5 => 2
    dri=/dev/dri/card${first_cuda}
fi
if [ ! -r "$dri" ]; then
    echo "device '${dri}' is not accessible  ?" 1>&2
    exit 1
fi
echo "CUDA_VISIBLE_DEVICES is set to '${CUDA_VISIBLE_DEVICES}'" 1>&2
echo "DRI card is '${dri}'" 1>&2

vgl_options="-d ${dri}"
id=${SLURM_JOBID-deleteme}

# account's HOME might not be accessible, but it must exist
[ -d ${HOME} ] || export HOME=$(pwd)/.temphome-$(whoami)

mkdir -p ${HOME}/.vnc

password1=$$
password2=view  # view-only password
passwordfile=${HOME}/.vnc/vnctmp-passwd-${id}
startup=${HOME}/.vnc/vnctmp-startup-${id}
logvnc=${HOME}/.vnc/vnctmp-vnc-${id}.txt
logapp=$(pwd)/log-stdout-${id}.txt

rm -f ${logvnc} ${logapp} ${logstderr} ${passwordfile} ${startup}

echo "cd $(pwd); vglrun ${vgl_options} xterm -geometry 160x60 -e bash -c '../__gputainer/run \"${@}\" 2>&1 | tee ${logapp}'" > ${startup}
chmod +x ${startup}

touch ${passwordfile}
chmod go-rwx ${passwordfile}
( echo ${password1}; echo ${password2}; ) | /opt/TurboVNC/bin/vncpasswd -f >> ${passwordfile}

/opt/TurboVNC/bin/vncserver -vgl -log ${logvnc} -rfbauth ${passwordfile} -xstartup ${startup}

waitcounter=10
while [ ! -r ${logvnc} ]; do
    waitcounter=$((waitcounter - 1))
    if [ ${waitcounter} -eq 0 ]; then
        echo "Could not start vnc server?" 1>&2
        exit 1
    fi
    echo "waiting for ${logvnc} (${waitcounter})"
    sleep 1
done

echo -e "========== LOGFILE: \n${logapp}\n"
tail -f ${logvnc} | sed -ne "s,.*TurboVNC:.*(\([^)]*\))$,========== RUN  IT NOW ($(date)):\n/opt/TurboVNC/bin/vncviewer -password ${password1} -noreconnect -nonewconn -scale auto \1\n\n========== VIEW IT NOW ($(date)):\n/opt/TurboVNC/bin/vncviewer -password ${password2} -noreconnect -nonewconn -scale auto \1\n,p" & shower=$!

tail -f ${logvnc} | sed -ne "/Killing Xvnc process ID/q"
echo -e "==========\n"

#cat ${logvnc}

kill ${shower}
