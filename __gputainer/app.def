Bootstrap: docker
From: ubuntu:20.04

%setup
    mkdir ${APPTAINER_ROOTFS}/local
    mkdir ${APPTAINER_ROOTFS}/pyenv
    mkdir ${APPTAINER_ROOTFS}/hostpwd
    mkdir ${APPTAINER_ROOTFS}/net
    ln -s /net/pfcalcul/pfcalcul ${APPTAINER_ROOTFS}/pfcalcul
    
# copy these local files into container
%files
    ${APPTAINER_APPDIR}/../user-postinstall /user-postinstall
    debs/virtualgl_3.0_amd64.deb

# build commands
%post
    ls -al /user-postinstall

    ###################################################
    ###### check if %environment must be updated ######
    export ROOT=/pyenv
    export FAST="--override-channels -c main -c conda-forge"
    export PREFIX1=${ROOT}/conda
    export PREFIX2=${ROOT}/app
    export PATH=${PREFIX2}/bin:${PREFIX1}/bin:${PATH}
    export DEBIAN_FRONTEND=noninteractive

    ###################################################
    apt -y update

    ###################################################
    # ubuntu nvidia GL drivers
    # https://docs.nvidia.com/deploy/cuda-compatibility/index.html#use-the-right-compat-package
    echo "Installing user packages: ${NVIDIA_PKG}"
    [ -z "${NVIDIA_PKG}" ] || apt -y install ${NVIDIA_PKG}
    apt -y install xterm glmark2 glmark2-es2 #debug
        
    # X/GL general dependencies
    apt -y install x11-apps mesa-utils liburdfdom-model libglib2.0-0

    dpkg -i debs/virtualgl_3.0_amd64.deb || apt -y -f install

    ###################################################
    # python needs compiler suite
    apt -y install wget build-essential sudo git # gdb

    ###################################################
    # python environment

    mkdir -p ${ROOT}
    cd ${ROOT}

    if [ -r /hostpwd/environment.yaml ]; then

        if [ ! -d ${PREFIX1} ]; then
            [ -r Miniconda3-latest-Linux-x86_64.sh ] || wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
            bash Miniconda3-latest-Linux-x86_64.sh -b -p ${PREFIX1}
        fi
        if [ ! -d ${PREFIX2} ]; then
            conda env create --file /hostpwd/environment.yaml --prefix ${PREFIX2}
        fi
        # update .bashrc:
        conda init bash

        # build application
        ## ubuntu runs dash incompatible with "shopt" command run in conda init script so .bashrc cannot be sourced
        ## also PS1 must be set to something or .bashrc's first line will discard the whole script
        bash -c "PS1=blah; . ${HOME}/.bashrc; conda activate ${PREFIX2}; export PATH=${PREFIX2}/bin:${PATH}; cd /hostpwd; python3 setup.py install; /user-postinstall"

    elif [ -r /hostpwd/requirements.txt ]; then

        apt -y install python3 python3-venv
        [ -d venv ] || python3 -m venv ${ROOT}/venv
        . ${ROOT}/venv/bin/activate
        pip install -r /hostpwd/requirements.txt
        cd /hostpwd
        /user-postinstall

    else

        echo "================================================================"
        echo "NO PYTHON INSTALLER FOUND (environment.yaml or requirements.txt)"
        echo "================================================================"
        sleep 5

    fi


##### TEST

# environment at runtime
%environment
    export ROOT=/pyenv
    export FAST="--override-channels -c main -c conda-forge"
    export PREFIX1=${ROOT}/conda
    export PREFIX2=${ROOT}/app
    export PATH=${PREFIX2}/bin:${PREFIX1}/bin:${PATH}
    export DEBIAN_FRONTEND=noninteractive


# ??? apptainer run sifile /// ./sifile
%runscript
    . ${PREFIX1}/etc/profile.d/conda.sh
    conda activate ${PREFIX2}
    python3 --version
    cd cosypose
    python3 -m cosypose.scripts.run_cosypose_eval --config tless-siso --debug

# ??? apptainer exec siffile
%startscript
    . ${PREFIX1}/etc/profile.d/conda.sh
    conda activate ${PREFIX2}
    python3 --version
